// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["jquery", "underscore", "application/views/screen"], function($, _, ScreenView) {
  var screen1ScreenView;
  return screen1ScreenView = (function(_super) {

    __extends(screen1ScreenView, _super);

    screen1ScreenView.prototype.getItemTemplate = function() {
      return "<li class=\"item\">\n  <h2><%= name %></h2>\n  <p><%= value %></p>\n</li>";
    };

    function screen1ScreenView(divID) {
      this.divID = divID;
      screen1ScreenView.__super__.constructor.call(this, this.divID);
    }

    screen1ScreenView.prototype.show = function() {
      var html;
      html = this.parseTemplate();
      console.log(html);
      $("" + this.divID + " .list").html(html);
      return screen1ScreenView.__super__.show.call(this);
    };

    screen1ScreenView.prototype.parseTemplate = function() {
      var item, list, template;
      template = this.getItemTemplate();
      if (this.data && this.data.length > 0) {
        return list = (function() {
          var _i, _len, _ref, _results;
          _ref = this.data;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            item = _ref[_i];
            _results.push(_.template(template, item));
          }
          return _results;
        }).call(this);
      }
    };

    return screen1ScreenView;

  })(ScreenView);
});
